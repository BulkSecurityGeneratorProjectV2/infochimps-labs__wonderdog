#!/usr/bin/env ruby

require 'rubygems'
require 'json'
require 'rake'
require 'configliere' ; Configliere.use(:commandline, :env_var, :define)

Settings.define :host,  :required => true, :description => "Elastic search cluster host ip address"
Settings.define :port,  :default => 9200,  :description => "Elastic search cluster port"
Settings.define :data_index,               :description => "Which index to address?"
Settings.define :replicas, :default => 1,  :description => "Number of replicas to set index to"
Settings.resolve!

task :status do
  sh "curl -s -XGET \"http://%s:%s/_status?pretty=true\"" % [Settings.host, Settings.port]
end

task :health do
  sh "curl -s -XGET \"http://%s:%s/_cluster/health?pretty=true\"" % [Settings.host, Settings.port]  
end

task :flush_index do
  sh "curl -s -XPOST \"http://%s:%s/%s/_flush?full=true\"" % [Settings.host, Settings.port, Settings.data_index]  
end

task :flush_all do
  sh "curl -s -XPOST \"http://%s:%s/_flush?full=true\"" % [Settings.host, Settings.port]  
end

task :create_index do
  sh "curl -s -XPUT \"http://%s:%s/%s/\"" % [Settings.host, Settings.port, Settings.data_index]  
end

task :set_replicas do
  sh "curl -s -XPUT \"http://%s:%s/%s/_settings\" -d {\"index\":{\"number_of_replicas\":%s}}" % [Settings.host, Settings.port, Settings.data_index, Settings.replicas]  
end


Rake::Task[Settings.rest.first].invoke


#
# Alternatively, one could use the rubberband gem
#
# $: sudo apt-get install libcurl4-dev
# $: sudo gem install rubberband
#
#
# require 'rubberband'
#
# client = ElasticSearch.new('10.195.215.175:9200', :index => "tweet-2010q1", :type => "tweet")
# client.search "text:infochimps"

# info_hash     = client.index_status
# num_docs      = info_hash['indices']['tweet-2010q1']['docs']['num_docs']
# num_shards    = info_hash['indices']['tweet-2010q1']['settings']['index.number_of_shards']
# num_replicas  = info_hash['indices']['tweet-2010q1']['settings']['index.number_of_replicas']
# size_in_bytes = info_hash['indices']['tweet-2010q1']['store_size_in_bytes']
#
